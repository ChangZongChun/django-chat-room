name: 'Deploy Django with Docker to AWS (EC2)'
# description: 'Deploy a Docker app to an AWS Virtual Machine (EC2)'

on:
  push:
    branches: 
      - master 
    paths-ignore:
      - 'nginx/**'
      - '.github\workflows\deploy_nginx.yml'

jobs:
  build_django_and_gunicorn:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
        

    - name: Login Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        

    - name: Build and push Django image to Dockerhub
      run: | 
        docker build . --tag ${{ secrets.DOCKERHUB_USERNAME }}/django_image:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/django_image:latest



  deploy:
    needs: build_django_and_gunicorn 
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_DJANGO: ${{ secrets.DOCKERHUB_USERNAME }}/django_image

    steps:
    - name: Configure env
      run: |
        cat << EOF > .env-gh
        SECRET_KEY=${{ secrets.SECRET_KEY}}
        DEBUG=False
        ALLOWED_HOSTS= .127.0.0.1, .localhost, .18.183.74.175, 52.194.249.240
        DB_NAME=${{secrets.RDS_DBNAME}}
        DB_USER=${{secrets.RDS_USERNAME}}
        DB_PASSWORD=${{secrets.RDS_PASSWORD}}
        DB_HOST=${{secrets.RDS_HOST}}
        EOF
        ls -la

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa

        # Add the host key of your EC2 instance to known_hosts
        ssh-keyscan ec2-52-194-249-240.ap-northeast-1.compute.amazonaws.com >> ~/.ssh/known_hosts

    - name: Copy .env-gh to EC2
      run: |
        scp -i ~/.ssh/id_rsa .env-gh ubuntu@ec2-52-194-249-240.ap-northeast-1.compute.amazonaws.com:/home/ubuntu/

    - name: Deploy to EC2
      run: |
        ssh -i ~/.ssh/id_rsa  \
        ubuntu@ec2-52-194-249-240.ap-northeast-1.compute.amazonaws.com \
        IMAGE_NAME_DJANGO="${{ env.IMAGE_NAME_DJANGO }}" \
        '
        docker login
        docker stop webapp || true
        docker rm webapp || true
        docker pull $IMAGE_NAME_DJANGO
        docker image ls -a
        docker run --name webapp -d \
        -v static_vol:/chatroom/staticfiles \
        -v media_vol:/chatroom/media/ \
        --env-file .env-gh \
        --network host \
        $IMAGE_NAME_DJANGO
        '